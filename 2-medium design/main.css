@layer baseline-style {
  :root {
    --lime: #a4ffa2;
    --magenta: #f47dda;
    --magenta50: #f47dda80;
    --white: #ffffff;
    --tan: #cec5b4;
    --teal: #2e6d81;
    --cyan: #7de6f4;
    --black: #050d14;
    --gradient: linear-gradient(var(--black) 0%, var(--teal) 100%);

    /* font size */
    --base-size: 1rem;
    --scale: 1.25;
    --h5: calc(var(--base-size) * var(--scale));
    --h4: calc(var(--h5) * var(--scale));
    --h3: calc(var(--h4) * var(--scale));
    --h2: calc(var(--h3) * var(--scale));
    --h1: calc(var(--h2) * var(--scale));
    --text_small: calc(var(--base-size) / var(--scale));

    /* fonts family */
    --sans-serif: "Phudu", sans-serif;
    --serif: "Cormorant Garamond", serif;
    --cursive: "Pacifico", cursive;
  }

  html {
    box-sizing: border-box;
  }
  *,
  *:before,
  *:after {
    box-sizing: inherit;
  }

  body {
    font-family: var(--sans-serif);
    font-optical-sizing: auto;
    font-weight: 400;
    font-style: normal;
    line-height: 1.6;

    color: var(--white);
    background-image: var(--gradient) ;
    background-repeat: no-repeat;
    background-attachment: fixed;
  }

  h1,
  h2,
  h3,
  h4,
  h5 {
    margin: 3rem 0 1.38rem;
    font-family: var(--sans-serif);
    font-weight: 400;
    line-height: 1.6;
  }

  h1 {
    margin-top: 0;
    font-size: var(--h1);
  }

  h2 {
    font-size: var(--h2);
  }
  h3 {
    font-size: var(--h3);
  }
  h4 {
    font-size: var(--h4);
  }
  h5 {
    font-size: var(--h5);
  }

  small,
  .text_small {
    font-size: var(--text_small);
  }

  a {
    color: var(--lime);
  }

  img {
    /* % works based on parent container */
    width: 100%;
  }

  p,
  figure,
  figcaption,
  blockquote {
    margin: 0;
    padding: 0;
  }

  .lime {
    background-color: var(--lime);
  }

  .magenta {
    background-color: var(--magenta);
  }

  .magenta50 {
    background-color: var(--magenta50);
  }
  .white {
    background-color: var(--white);
  }
  .tan {
    background-color: var(--tan);
  }
  .teal {
    border: 1px solid var(--white);
    background-color: var(--teal);
  }
  .cyan {
    background-color: var(--cyan);
  }
  .black {
    background-color: var(--black);
  }
}

/*
#################################################
# NAVBAR SECTION
#################################################
*/

@layer navbar {
  /* This layer is written based on Desktop first and Mobile last layout. So css code outside of media-query targets Desktop layout. */
  #top {
    padding: 1rem;
    margin: 0 auto;
    display: flex;
    justify-content: space-between;
    align-items: center;
    /* gap: 1.5rem; */
  }

  #top h1 img {
    width: 3rem;
    height: 3rem;
  }

  #top a {
    transition: transform 0.3s, color 0.3s, box-shadow 0.3s;
  }

  #top h1 a {
    font-size: var(--h3);
    color: var(--white);
    font-family: var(--cursive);
  }
  #top h1 a:hover {
    color: var(--magenta);
  }

  #top nav li {
    list-style: none;
    display: inline-block;
    margin-left: 1rem;
  }

  #top nav a {
    color: var(--white);
    font-family: var(--cursive);
    padding: 0.25em 0;
    line-height: 1.3;
  }

  /* #top a {
    display: inline-block;
    color: orange;
    transition: transform 0.3s, color 0.3s, box-shadow 0.3s;
  } */

  #top > nav a:focus,
  #top > nav a:hover {
    color: var(--cyan);
    transform: scale(1.2);
  }

  @media (max-width: 600px) {
    #mainMenuOpen:after {
      /* this is hamburger button */
      content: "\2630";
    }

    #mainMenuOpen {
      display: block;
      font-size: 2em;
      line-height: 1;
      border: 0;
      background: transparent;
      color: var(--magenta);
    }

    #mainMenuOpen + nav {
      position: fixed;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      overflow: auto;
      display: flex;
      justify-content: center;
      opacity: 1;
      background: var(--black);
      /* transition: property duration timing-function delay; */
      transition: left 0.3s 0.3s, opacity 0.3s;
    }

    #mainMenuOpen:focus + nav,
    #mainMenuOpen + nav:focus-within {
      left: 0;
      opacity: 0.9;
      transition: left 0s, opacity 0.3s;
    }

    #mainMenuOpen + nav ul {
      display: flex;
      flex-flow: column wrap;
      justify-content: flex-start;
      position: relative;
      /* below top property gives the look and feel of bringin our nav bar from top:-50vh to top:0 (to it's original position)  */
      /* top: -60vh; */
      min-width: 50vw;
      max-width: 100vw;
      margin: auto;
      overflow: hidden;
      transition: top 0.5s;
    }

    #mainMenuOpen:focus + nav ul,
    #mainMenuOpen + nav:focus-within ul {
      top: 0;
    }

    #mainMenuOpen + nav li {
      width: 50%;
      text-align: center;
      margin: 2rem 0;
    }

    #mainMenuOpen + nav ul:after {
      /* border: 1px solid green; */
      content: "\1F5D9";
      display: block;
      position: absolute;
      top: 0;
      right: 0;
      font-size: 2rem;
      line-height: 1;
    }
  }
}

/*
#################################################
# AUDIO PLAYER SECTION
#################################################
*/

@layer audio-player {
  .cover {
    max-width: 550px;
    margin: 0 auto;
  }

  .cover img {
    object-fit: cover;
    outline: var(--cyan) solid 2px;
  }

  #audio-player-container button {
    padding: 0;
    border: 0;
    background: transparent;
    cursor: pointer;
    outline: none;
  }
  button#mute-icon {
    padding: 0.4rem 0 0.4rem 0.6rem;
    width: 3rem;
    height: 3rem;
  }
  button#mute-icon path {
    /* The 'path' selector targets the <path> element inside svg which is inside the button element with the id 'mute-icon'. */
    stroke: var(--white);
  }
  button#play-icon {
    background-color: var(--lime);
    padding: 0.5rem;
    border-radius: 50%;
    width: 3rem;
    height: 3rem;
  }
  button#play-icon path {
    stroke: var(--black);
  }
  button#play-icon:hover {
    background-color: var(--cyan);
  }
  #audio-player-container {
    --seek-before-width: 0%;
    --volume-before-width: 100%;
    --buffered-width: 0%;
    position: relative;
    margin: 100px 2.5% auto 2.5%;
    width: 100%;
    height: 132px;
    max-width: 500px;
    /* background: #fff; */
  }
  #audio-player-container::before {
    position: absolute;
    content: "";
    width: calc(100% + 4px);
    height: calc(100% + 4px);
    left: -2px;
    top: -2px;
    /* background: linear-gradient(to left, #007db5, #ff8a00); */
    z-index: -1;
  }
  p {
    margin: 0;
    /*     position: absolute; */
    /*     top: -18px; */
    /*     right: 5%; */
    /*     padding: 0 5px; */
    /*     margin: 0; */
    /*     font-size: 28px; */
    /*     background: #fff; */
  }

  .time {
    font-size: var(--h5);

    /* display: inline-block; */
    /* width: 37px; */
    /* margin: 28.5px 0 18.5px 0; */
    /* float: left; */
  }
  #current-time.time {
    /* Below we have used grid, in which this element act like grid child, hence we can use this property */
    place-self: center start;
  }
  #duration.time {
    /* Below we have used grid, in which this element act like grid child, hence we can use this property */
    place-self: center end;
  }
  #audio-player-container output {
    text-align: left;
    font-size: var(--h5);

    /* All default properties are below of forked player */
    /* display: inline-block; */
    /* width: 32px; */
    /* text-align: center; */
    /* font-size: 20px; */
    /* margin: 10px 2.5% 0 5%; */
    /* float: left; */
    /* clear: left; */
  }
  #volume-slider {
    width: 100%;
    background-color: transparent;
  }
  #volume-slider::-webkit-slider-runnable-track {
    background: rgba(0, 125, 181, 0.6);
  }
  #volume-slider::-moz-range-track {
    background: rgba(0, 125, 181, 0.6);
  }
  #volume-slider::-ms-fill-upper {
    background: rgba(0, 125, 181, 0.6);
  }
  #volume-slider::before {
    width: var(--volume-before-width);
  }

  input[type="range"] {
    /* It's a attribute type of selector, it actually mean select element which are of type input and contain attribute of type `type=range` */
    background-color: transparent;
    position: relative;
    -webkit-appearance: none;
    appearance: none;
    width: 100%;
    padding: 0;
    height: 19px;
    /* margin: 30px 2.5% 20px 2.5%; */
    outline: none;
  }
  input[type="range"]::-webkit-slider-runnable-track {
    width: 100%;
    height: 3px;
    cursor: pointer;

    /* Use this belo background property to change color of slider */
    background: linear-gradient(
      to right,
      rgba(0, 125, 181, 0.6) var(--buffered-width),
      rgba(0, 125, 181, 0.2) var(--buffered-width)
    );
  }
  input[type="range"]::before {
    position: absolute;
    content: "";
    top: 8px;
    left: 0;
    width: var(--seek-before-width);
    height: 3px;
    background-color: var(--cyan);
    cursor: pointer;
  }
  input[type="range"]::-webkit-slider-thumb {
    position: relative;
    -webkit-appearance: none;
    box-sizing: content-box;
    border: 1px solid #007db5;
    height: 15px;
    width: 15px;
    border-radius: 50%;
    background-color: #fff;
    cursor: pointer;
    margin: -7px 0 0 0;
  }
  input[type="range"]:active::-webkit-slider-thumb {
    transform: scale(1.2);
    background: #007db5;
  }
  input[type="range"]::-moz-range-track {
    width: 100%;
    height: 3px;
    cursor: pointer;
    background: linear-gradient(
      to right,
      rgba(0, 125, 181, 0.6) var(--buffered-width),
      rgba(0, 125, 181, 0.2) var(--buffered-width)
    );
  }
  input[type="range"]::-moz-range-progress {
    background-color: #007db5;
  }
  input[type="range"]::-moz-focus-outer {
    border: 0;
  }
  input[type="range"]::-moz-range-thumb {
    box-sizing: content-box;
    border: 1px solid #007db5;
    height: 15px;
    width: 15px;
    border-radius: 50%;
    background-color: #fff;
    cursor: pointer;
  }
  input[type="range"]:active::-moz-range-thumb {
    transform: scale(1.2);
    background: #007db5;
  }
  input[type="range"]::-ms-track {
    width: 100%;
    height: 3px;
    cursor: pointer;
    background: transparent;
    border: solid transparent;
    color: transparent;
  }
  input[type="range"]::-ms-fill-lower {
    background-color: #007db5;
  }
  input[type="range"]::-ms-fill-upper {
    background: linear-gradient(
      to right,
      rgba(0, 125, 181, 0.6) var(--buffered-width),
      rgba(0, 125, 181, 0.2) var(--buffered-width)
    );
  }
  input[type="range"]::-ms-thumb {
    box-sizing: content-box;
    border: 1px solid #007db5;
    height: 15px;
    width: 15px;
    border-radius: 50%;
    background-color: #fff;
    cursor: pointer;
  }
  input[type="range"]:active::-ms-thumb {
    transform: scale(1.2);
    background: #007db5;
  }

  .row1 {
    display: grid;
    grid-template-columns: 1fr 2fr 1fr;
    grid-template-rows: 1fr;
    place-items: center;
  }

  .row1 > p {
    font-family: var(--cursive);
  }

  .row1 p:first-child {
    place-self: center start;
  }

  .row1 p:last-child {
    place-self: center end;
  }

  .row2 {
    display: grid;
    grid-template-columns: 2fr 1fr;
  }

  .row2 span,
  .row2 output {
    font-family: var(--serif);
    color: var(--white);
    padding: 0.4rem;
  }

  .song-slider-container {
    display: grid;
    grid-template-columns: 1fr 4fr 1fr;
    place-items: center;
  }

  .vol-slider-container {
    display: grid;
    grid-template-columns: 1fr 3fr 1fr;
    place-items: center;
    row-gap: 1rem;
  }
}


@layer mobile {
  .wrapper {
    max-width: 425px;
    margin: 0 auto;
    text-align: center;
  }

  @layer header {
    .header {
      text-align: center;
      margin-bottom: 2rem;
    }

    .header__logo--resize {
      width: 40%;
    }
  }

  @layer tour {
    .main {
      margin-top: 2rem;
      margin-bottom: 3rem;
      display: grid;
      grid-template-columns: repeat(2, 1fr);
    }

    .main h1 {
      font-family: var(--cursive);
      grid-column: 1/3;
    }

    .main p:nth-child(odd) {
      /* selecting paragraph element which contain ticket button link */

      /* move you element inside grid to center wrt. X-Axis */
      justify-self: center;
      /* move you element inside grid to center wrt. Y-Axis */
      align-self: center;

      /* OR */
      /* place-self: center; */
    }

    .main p {
      margin: 1rem 0;
    }

    .main__tour-details__date {
      font-family: var(--cursive);
      color: var(--tan);
    }

    .main__tour-details__location {
      font-family: var(--serif);
      text-transform: uppercase;
      font-size: var(--h5);
      color: var(--lime);
    }

    .main__tour-details__city {
      color: var(--white);
    }

    .button-primary {
      font: var(--serif);
      text-transform: uppercase;
      text-decoration: none;
      display: inline-block;
      padding: 1rem 2rem;
      border: 2px solid var(--magenta);
      border-radius: 1rem;
      color: var(--magenta);
      white-space: nowrap;
      width: 170px;
    }

    .button-primary:hover {
      color: var(--cyan);
      border-color: var(--cyan);
    }

    .button-soldout {
      color: var(--magenta50);
      border-color: var(--magenta50);
      background-image: linear-gradient(
        to left top,
        transparent calc(50% - 2px),
        var(--magenta50),
        transparent calc(50% + 2px)
      );

      /* But we still have hover effect in our disable buttons, to avoid it either use
    pointer-events: none; property OR write hover code for .button-soldout class
    */
      pointer-events: none;
    }
  }

  @layer album {
    .album {
      text-align: center;
      border: 2px solid var(--cyan);
      padding-bottom: 2rem;
      max-width: 500px;
      margin: 2rem auto;
    }

    .album__h2 {
      margin-top: 2rem;
      font-family: var(--cursive);
      font-size: var(--h5);
    }

    .album__h1 {
      font-family: var(--serif);
      color: var(--lime);
      text-transform: uppercase;
      font-size: var(--h4);
    }

    .button-primary {
      font-weight: bold;
    }
  }

  /*
#################################################
# TRACK LIST SECTION CSS
#################################################
*/

  @layer tracklist {
    .section__table {
      max-width: 500px; /* it means, if view port > 500 then won't extend table width more than 500px*/
      width: 100%; /* it means, if view port < 500 then take 100% width */
      margin: 0 auto;
      font-family: var(--cursive);

      /* 
      helps remove default border space which by defualt not visible, but present.
      I was popular in 90s. Note: don't try to remove this border using border:none;
      */
      border-collapse: collapse;
    }

    .section__table caption {
      /* here visibility means, only display caption to screen readers and not in normal view. */
      visibility: collapse;
    }

    .section__table th,
    .section__table td {
      padding: 0.5rem;
      text-align: left;
    }

    .section__table th {
      border-bottom: 2px solid var(--gray);
    }
    .section__table tr:nth-of-type(1) {
      font-family: var(--sans-serif);
      color: var(--tan);
      border-bottom: 1px solid var(--gray);
    }

    /* Below selector means, look for each tr element and when you find one, look for td
    type element and select the 3 child  */
    .section__table tr:nth-of-type(1n + 2) > td:nth-child(3) {
      /* Above complex selector can be replaced with below one
      - it tell browser to select all LAST td element which are CHILD of parent (eg. tr) */
      /* td:nth-last-of-type() {...} */
      color: var(--magenta);
      font-family: var(--serif);
    }
  }

  @layer review-page {
    .star {
      width: 15px;
    }

    .featured-img {
      display: none;
    }

    .reviews {
      max-width: 500px;
      margin: 2rem auto;
      border: 2px solid var(--cyan);
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: 2rem;
      text-align: center;
    }
  }

  @layer footer {
    .footer {
      margin: 3rem 0 2rem;
    }

    .footer__svg--social-media {
      display: flex;
      flex-flow: row wrap;
      justify-content: center;
      gap: 0 1rem;
    }

    .footer__svg--social-media svg {
      /* fill property for svg, svg:hover were not working because already a fill property was present
    in svg path element, hence css can't overide it, so remove fill property from path. */
      fill: var(--lime);
      height: 3rem;
      width: 3rem;
    }

    .footer__svg--social-media svg:hover {
      fill: var(--cyan);
    }

    .footer__contact-policy--space {
      padding: 0 0.5rem;
    }
  }
}

@layer tablet {
  @media (min-width: 700px) {
    .wrapper {
      max-width: 800px;
    }

    .header__logo--resize {
      width: 20%;
    }

    @layer review-page-tablet {
      .reviews {
        /* Already defined in mobile layout, just let user know reviews is grid */
        display: grid;

        /* In our tablet layout, we would like to overflow our img from grid, and for hat
        we have to overide default fr unit, because how fr unit works.
        */
        grid-template-columns: repeat(6, 90px);
        justify-content: center;
        width: 540px;
      }
      .featured-img {
        /* inline-block because img by default are inline, but we would like to control
        margin and padding of img too, hence, inline-block */
        display: inline-block;
      }

      .reviews figure:first-of-type {
        order: 1;
        grid-column: 1 / 4;
        grid-row: 1 / 2;
        justify-self: end;
        padding: 1rem 6rem 1rem 1rem;
      }

      .reviews figure:nth-of-type(2) {
        order: 1;
        grid-column: 4 / 7;
        grid-row: 1 / 2;
        justify-self: start;
        padding: 1rem 1rem 0rem 3rem;
      }

      .featured-img {
        order: 2;
        grid-column: span 2;
      }

      .featured-img img {
        border: 2px solid var(--white);
      }

      .reviews figure:nth-of-type(3) {
        order: 3;
        grid-column: 1 / 4;
        grid-row: 3 / 4;
        justify-self: end;
        padding: 1rem 3em 1rem 1rem;
      }

      .reviews figure:nth-of-type(4) {
        order: 3;
        grid-column: 4 / 7;
        grid-row: 3 / 4;
        justify-self: start;
        padding: 1rem 0rem 1rem 0rem;
      }
    }
  }
}

@layer desktop {
  @media (min-width: 1024px) {
    @layer overall-website-layout-for-desktop {
      .wrapper {
        max-width: 1440px;
        margin: 0 auto;
      }
      .main-grid {
        margin: 0 2rem;
        display: grid;
        grid-template-columns: 200px auto 350px;
        /* grid-template-rows: auto; */
        gap: 2rem;
        /* justify-items: center; */
        /* align-items: start; */
      }

      .album {
        /* This property is used to align all the three items (reviews, cover, track-list-section) in desktop layout from the top in the same line */
        margin-top: 0;
      }

      .reviews {
        /* We don't need to define order for reviews, because default value of order is 1 */
        order: 1;
        margin-top: 0;
      }

      .cover {
        order: 2;
      }

      .track-list-section {
        order: 3;
      }

      /*
      Why using below code, results in additional 2nd row in grid layout? when I except only 1 row and 3 column, even after defining explicitly grid-template-row: 1fr; and using below properties for each child element.
      
      .reviews {
        grid-column: 1 / 2;
      }

      .cover {
        grid-column: 2 / 3;
      }

      .track-list-section{
        grid-column: 3 / 4 ;
      } */

      #top {
        max-width: 800px;
        margin: 4rem auto;
      }
    }

    @layer review-page-desktop {
      .reviews {
        /* display: block is turning our grid layout for mobile and tablet setting to block.
        This helps us to avoid telling desktop media query to remove Inherited grid properties in desktop layout*/
        display: block;
        width: 200px;
      }

      .featured-img {
        /* inline-block because img by default are inline, but we would like to control
        margin and padding of img too, hence, inline-block */
        position: relative;
        right: 2rem;
      }

      .reviews figure:first-of-type,
      .reviews figure:nth-of-type(2),
      .reviews figure:nth-of-type(3),
      .reviews figure:nth-of-type(4) {
        padding: 2rem;
      }
    }
  }
}
